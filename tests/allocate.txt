/*
 * Copyright (c) 2018-2020, High Performance Computing Architecture and System
 * research laboratory at University of North Carolina at Charlotte (HPCAS@UNCC)
 * and Lawrence Livermore National Security, LLC.
 *
 * SPDX-License-Identifier: (BSD-3-Clause)
 */

//For testing purpose, there are several extra empty lines.
//The final version should only contain necessary information.
//This is not a C/C++ code, so there's no required writing style.
//Only two kinds of special lines will be recognized.
//One is starting with "omp", which is the input.
//The other one is starting with "PASS: ", which is the result for validation.

#pragma omp allocate(a,b,c)
PASS: #pragma omp allocate (a,b,c) 

#pragma omp allocate(to,b,c)
PASS: #pragma omp allocate (to,b,c) 

#pragma omp allocate(f,e) allocator(omp_allocator_handle_t)
PASS: #pragma omp allocate (f,e) allocator (omp_allocator_handle_t)

#pragma omp allocate (z,x) allocator(omp_default_mem_alloc)
PASS: #pragma omp allocate (z,x) allocator (omp_default_mem_alloc)

#pragma omp allocate (z,x) allocator(omp_default_mem_alloc) align(3)
PASS: #pragma omp allocate (z,x) allocator (omp_default_mem_alloc) align (3)

#pragma omp allocate (z,x) align(3)
PASS: #pragma omp allocate (z,x) align (3)

#pragma omp allocate (z,x) align(3) allocator(omp_default_mem_alloc)
PASS: #pragma omp allocate (z,x) align (3) allocator (omp_default_mem_alloc)


// invalid test without paired validation.

#pragma omp allocate allocator(omp_default_mem_alloc:a,b,c)

#pragma omp allocate(a,b,v) allocator(omp_default_mem_alloc:a,b,c)

#pragma omp allocate(a,b,v) allocator(omp_default_mem_alloc) allocator(omp_allocator_handle_td) 






