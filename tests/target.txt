/*
 * Copyright (c) 2018-2020, High Performance Computing Architecture and System
 * research laboratory at University of North Carolina at Charlotte (HPCAS@UNCC)
 * and Lawrence Livermore National Security, LLC.
 *
 * SPDX-License-Identifier: (BSD-3-Clause)
 */

//For testing purpose, there are several extra empty lines.
//The final version should only contain necessary information.
//This is not a C/C++ code, so there's no required writing style.
//Only two kinds of special lines will be recognized.
//One is starting with "omp", which is the input.
//The other one is starting with "PASS: ", which is the result for validation.

#pragma omp target if(target:3456) device(ancestor:5) private (x, n[1:5]) firstprivate (foo(x), y) in_reduction (test_identifier : x11, y, z) is_device_ptr(m,n,j) defaultmap(alloc:pointer) nowait depend(iterator(int bba=4:120:2), in:m, n) allocate (omp_default_mem_alloc : m, n[1:5]) uses_allocators(omp_default_mem_alloc(1234567),omp_const_mem_alloc(234))
PASS: #pragma omp target if (target: 3456) device (ancestor : 5) private (x, n[1:5]) firstprivate (foo(x), y) in_reduction (test_identifier : x11, y, z) is_device_ptr (m, n, j) defaultmap (alloc: pointer) nowait depend (iterator ( int bba=4:120:2 ), in : m, n) allocate (omp_default_mem_alloc: m, n[1:5]) uses_allocators (omp_default_mem_alloc(1234567),omp_const_mem_alloc(234) )

#pragma omp target if(target:3456) device(ancestor:5) private (x, n[1:5]) firstprivate (foo(x), y) in_reduction (test_identifier : x11, y, z) is_device_ptr(m,n,j) defaultmap(alloc:pointer) nowait depend(iterator(int bba=4:120:2,char huj = 2:677), inout:m, n) allocate (omp_default_mem_alloc : m, n[1:5]) uses_allocators(omp_default_mem_alloc(1234567),omp_const_mem_alloc(234))
PASS: #pragma omp target if (target: 3456) device (ancestor : 5) private (x, n[1:5]) firstprivate (foo(x), y) in_reduction (test_identifier : x11, y, z) is_device_ptr (m, n, j) defaultmap (alloc: pointer) nowait depend (iterator ( int bba=4:120:2, char huj=2:677 ), inout : m, n) allocate (omp_default_mem_alloc: m, n[1:5]) uses_allocators (omp_default_mem_alloc(1234567),omp_const_mem_alloc(234) )

#pragma omp target if(target:3456)
PASS: #pragma omp target if (target: 3456)

#pragma omp target private (x, n[1:5]) firstprivate (foo(x), y)
PASS: #pragma omp target private (x, n[1:5]) firstprivate (foo(x), y)

#pragma omp target depend(iterator(int bba=4:120:2,char huj = 2:677), inout:m, n)
PASS: #pragma omp target depend (iterator ( int bba=4:120:2, char huj=2:677 ), inout : m, n)

#pragma omp target uses_allocators(omp_default_mem_alloc(1234567),omp_const_mem_alloc(234))
PASS: #pragma omp target uses_allocators (omp_default_mem_alloc(1234567),omp_const_mem_alloc(234) )

#pragma omp target defaultmap(alloc)
PASS: #pragma omp target defaultmap (alloc)

#pragma omp target defaultmap(to)
PASS: #pragma omp target defaultmap (to)

#pragma omp target has_device_addr(a, b, c)
PASS: #pragma omp target has_device_addr (a, b, c)
